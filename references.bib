@Book{IsmayIntroductionStatisticalData,
  address = {Boca Raton},
  edition = {1},
  series = {Chapman \& {{Hall}}/{{CRC The R Series}}},
  title = {Statistical {{Inference}} via {{Data Science}}: {{A ModernDive}} into {{R}} and the {{Tidyverse}}},
  isbn = {978-0-367-40982-1},
  publisher = {{Chapman and Hall/CRC}},
  author = {Chester Ismay and Albert Y. Kim},
  month = {dec},
  year = {2019},
  keywords = {statistics,introduction},
}
@Article{oomsJsonlitePackagePractical2014,
  archiveprefix = {arXiv},
  eprinttype = {arxiv},
  eprint = {1403.2805},
  primaryclass = {cs, stat},
  title = {The Jsonlite {{Package}}: {{A Practical}} and {{Consistent Mapping Between JSON Data}} and {{R Objects}}},
  shorttitle = {The Jsonlite {{Package}}},
  abstract = {A naive realization of JSON data in R maps JSON arrays to an unnamed list, and JSON objects to a named list. However, in practice a list is an awkward, inefficient type to store and manipulate data. Most statistical applications work with (homogeneous) vectors, matrices or data frames. Therefore JSON packages in R typically define certain special cases of JSON structures which map to simpler R types. Currently there exist no formal guidelines, or even consensus between implementations on how R data should be represented in JSON. Furthermore, upon closer inspection, even the most basic data structures in R actually do not perfectly map to their JSON counterparts and leave some ambiguity for edge cases. These problems have resulted in different behavior between implementations and can lead to unexpected output. This paper explicitly describes a mapping between R classes and JSON data, highlights potential problems, and proposes conventions that generalize the mapping to cover all common structures. We emphasize the importance of type consistency when using JSON to exchange dynamic data, and illustrate using examples and anecdotes. The jsonlite R package is used throughout the paper as a reference implementation.},
  journal = {arXiv:1403.2805 [cs, stat]},
  author = {Jeroen Ooms},
  month = {mar},
  year = {2014},
  keywords = {Computer Science - Mathematical Software,Computer Science - Software Engineering,Statistics - Computation},
  file = {C:\\Users\\wdnooy1\\Zotero\\storage\\YDKW5AE5\\Ooms - 2014 - The jsonlite Package A Practical and Consistent M.pdf;C:\\Users\\wdnooy1\\Zotero\\storage\\AJ8VRUBH\\1403.html},
}
@Book{WickhamDataScienceImport2017,
  address = {Sebastopol, CA},
  edition = {1 edition},
  title = {R for {{Data Science}}: {{Import}}, {{Tidy}}, {{Transform}}, {{Visualize}}, and {{Model Data}}},
  isbn = {978-1-4919-1039-9},
  shorttitle = {R for {{Data Science}}},
  abstract = {Learn how to use R to turn raw data into insight, knowledge, and understanding. This book introduces you to R, RStudio, and the tidyverse, a collection of R packages designed to work together to make data science fast, fluent, and fun. Suitable for readers with no previous programming experience, R for Data Science is designed to get you doing data science as quickly as possible.Authors Hadley Wickham and Garrett Grolemund guide you through the steps of importing, wrangling, exploring, and modeling your data and communicating the results. You'll get a complete, big-picture understanding of the data science cycle, along with basic tools you need to manage the details. Each section of the book is paired with exercises to help you practice what you've learned along the way.You'll learn how to:Wrangle\textemdash{}transform your datasets into a form convenient for analysisProgram\textemdash{}learn powerful R tools for solving data problems with greater clarity and easeExplore\textemdash{}examine your data, generate hypotheses, and quickly test themModel\textemdash{}provide a low-dimensional summary that captures true {"}signals{"} in your datasetCommunicate\textemdash{}learn R Markdown for integrating prose, code, and results},
  language = {English},
  publisher = {{O'Reilly Media}},
  author = {Hadley Wickham and Garrett Grolemund},
  month = {jan},
  year = {2017},
}
@Book{wickhamGgplot2ElegantGraphics2009,
  address = {New York},
  series = {Use {{R}}!},
  title = {Ggplot2: {{Elegant Graphics}} for {{Data Analysis}}},
  isbn = {978-0-387-98141-3},
  shorttitle = {Ggplot2},
  abstract = {This book describes ggplot2, a new data visualization package for R that uses the insights from Leland Wilkison's Grammar of Graphics to create a powerful and flexible system for creating data graphics. With ggplot2, it's easy to: produce handsome, publication-quality plots, with automatic legends created from the plot specification superpose multiple layers (points, lines, maps, tiles, box plots to name a few) from different data sources, with automatically adjusted common scales add customisable smoothers that use the powerful modelling capabilities of R, such as loess, linear models, generalised additive models and robust regression save any ggplot2 plot (or part thereof) for later modification or reuse create custom themes that capture in-house or journal style requirements, and that can easily be applied to multiple plots approach your graph from a visual perspective, thinking about how each component of the data is represented on the final plot This book will be useful to everyone who has struggled with displaying their data in an informative and attractive way. You will need some basic knowledge of R (i.e. you should be able to get your data into R), but ggplot2 is a mini-language specifically tailored for producing graphics, and you'll learn everything you need in the book. After reading this book you'll be able to produce graphics customized precisely for your problems, and you'll find it easy to get graphics out of your head and on to the screen or page. Hadley Wickham is an Assistant Professor of Statistics at Rice University, and is interested in developing computational and cognitive tools for making data preparation, visualization, and analysis easier. He has developed 15 R packages and in 2006 he won the John Chambers Award for Statistical Computing for his work on the ggplot and reshape R packages.},
  language = {en},
  publisher = {{Springer-Verlag}},
  author = {Hadley Wickham},
  year = {2009},
  file = {C:\\Users\\wdnooy1\\Zotero\\storage\\6FKJS4VZ\\9780387981413.html},
  doi = {10.1007/978-0-387-98141-3},
}
@Book{HayesIntroductionMediationModeration2013,
  title = {Introduction to {{Mediation}}, {{Moderation}}, and {{Conditional Process Analysis}}: {{A Regression}}-{{Based Approach}}},
  isbn = {978-1-60918-230-4},
  number = {Book, Whole},
  publisher = {{Guilford Press}},
  author = {Andrew F. Hayes},
  year = {2013},
  keywords = {mediation,moderation,regression},
}
@Book{xieBookdownAuthoringBooks2016,
  address = {{Boca Raton, FL}},
  edition = {1 edition},
  title = {Bookdown: {{Authoring Books}} and {{Technical Documents}} with {{R Markdown}}},
  isbn = {978-1-138-70010-9},
  shorttitle = {Bookdown},
  abstract = {bookdown: Authoring Books and Technical Documents with R Markdown presents a much easier way to write books and technical publications than traditional tools such as LaTeX and Word. The bookdown package inherits the simplicity of syntax and flexibility for data analysis from R Markdown, and extends R Markdown for technical writing, so that you can make better use of document elements such as figures, tables, equations, theorems, citations, and references. Similar to LaTeX, you can number and cross-reference these elements with bookdown. Your document can even include live examples so readers can interact with them while reading the book. The book can be rendered to multiple output formats, including LaTeX/PDF, HTML, EPUB, and Word, thus making it easy to put your documents online. The style and theme of these output formats can be customized. We used books and R primarily for examples in this book, but bookdown is not only for books or R. Most features introduced in this book also apply to other types of publications: journal papers, reports, dissertations, course handouts, study notes, and even novels. You do not have to use R, either. Other choices of computing languages include Python, C, C++, SQL, Bash, Stan, JavaScript, and so on, although R is best supported. You can also leave out computing, for example, to write a fiction. This book itself is an example of publishing with bookdown and R Markdown, and its source is fully available on GitHub.},
  language = {English},
  publisher = {{Chapman and Hall/CRC}},
  author = {Yihui Xie},
  month = {dec},
  year = {2016},
}
